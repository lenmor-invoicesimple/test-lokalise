import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";


import { IntlProvider } from "@/components/intl-provider";
import React from 'react';
import { getIntl } from "@/intl/get-intl";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// export async function getIntl(locale: keyof typeof dictionaries = 'en') {
//   const messages = await dictionaries[locale]();

//   return {
//     messages,
//     locale,
//   }
// }


export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {

  const intl = await getIntl()

  const locale = intl.locale || 'en';

  return (
    <html>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <IntlProvider messages={intl.messages} locale={locale}>
            {children}
          </IntlProvider>
      </body>
    </html>
  );
}
